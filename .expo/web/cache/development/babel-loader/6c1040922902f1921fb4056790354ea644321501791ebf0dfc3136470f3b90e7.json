{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar fetchradomQuote = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      fetchListQuote();\n      var randomQuote = yield fetch('https://api.quotable.io/random').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return data;\n      });\n      return randomQuote;\n    } catch (e) {\n      console.log(e);\n      return e;\n    }\n  });\n  return function fetchradomQuote() {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar fetchListQuote = function () {\n  var _ref2 = _asyncToGenerator(function* () {\n    try {\n      var randomlistQuote = yield fetch('https://api.quotable.io/quotes/random?limit=2');\n      return randomlistQuote.json();\n    } catch (e) {\n      console.log(e);\n      return e;\n    }\n  });\n  return function fetchListQuote() {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport default fetchradomQuote;\nfetchListQuote;","map":{"version":3,"names":["fetchradomQuote","_ref","_asyncToGenerator","fetchListQuote","randomQuote","fetch","then","res","json","data","e","console","log","apply","arguments","_ref2","randomlistQuote"],"sources":["/Users/chezz/expo/instaquote/data/fetchdata.js"],"sourcesContent":["const fetchradomQuote = async () => {\n   \n   try {\n      fetchListQuote();\n         let randomQuote = await fetch('https://api.quotable.io/random').then(res => res.json()).then(data => {\n         return data;\n      });\n      return randomQuote;\n     \n   } catch (e) {\n      console.log(e)\n      return e;\n      \n      \n   } \n\n}\n\nconst fetchListQuote = async () => {\n   \n   try {\n      \n         // let randomlistQuote = await fetch('https://api.quotable.io/quotes/random?limit=2').then(res => res.json()).then(data => {\n         // return data;\n         // });\n      let randomlistQuote = await fetch('https://api.quotable.io/quotes/random?limit=2');\n      \n      return randomlistQuote.json();\n     \n   } catch (e) {\n      console.log(e);\n      return e;\n      \n      \n   } \n\n}\nexport default fetchradomQuote; fetchListQuote;"],"mappings":";AAAA,IAAMA,eAAe;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAEjC,IAAI;MACDC,cAAc,EAAE;MACb,IAAIC,WAAW,SAASC,KAAK,CAAC,gCAAgC,CAAC,CAACC,IAAI,CAAC,UAAAC,GAAG;QAAA,OAAIA,GAAG,CAACC,IAAI,EAAE;MAAA,EAAC,CAACF,IAAI,CAAC,UAAAG,IAAI,EAAI;QACrG,OAAOA,IAAI;MACd,CAAC,CAAC;MACF,OAAOL,WAAW;IAErB,CAAC,CAAC,OAAOM,CAAC,EAAE;MACTC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MACd,OAAOA,CAAC;IAGX;EAEH,CAAC;EAAA,gBAhBKV,eAAeA,CAAA;IAAA,OAAAC,IAAA,CAAAY,KAAA,OAAAC,SAAA;EAAA;AAAA,GAgBpB;AAED,IAAMX,cAAc;EAAA,IAAAY,KAAA,GAAAb,iBAAA,CAAG,aAAY;IAEhC,IAAI;MAKD,IAAIc,eAAe,SAASX,KAAK,CAAC,+CAA+C,CAAC;MAElF,OAAOW,eAAe,CAACR,IAAI,EAAE;IAEhC,CAAC,CAAC,OAAOE,CAAC,EAAE;MACTC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;MACd,OAAOA,CAAC;IAGX;EAEH,CAAC;EAAA,gBAlBKP,cAAcA,CAAA;IAAA,OAAAY,KAAA,CAAAF,KAAA,OAAAC,SAAA;EAAA;AAAA,GAkBnB;AACD,eAAed,eAAe;AAAEG,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}